#!/usr/bin/env bash

set -e

echo "=== Debug gh-select ==="

# Test 1: Check tools
echo "1. Checking required tools:"
for cmd in gh fzf; do
    if command -v "$cmd" >/dev/null 2>&1; then
        echo "  ✓ $cmd found at $(command -v "$cmd")"
    else
        echo "  ✗ $cmd not found"
        exit 1
    fi
done

# Test 2: Check auth
echo "2. Checking GitHub authentication:"
if gh auth status >/dev/null 2>&1; then
    echo "  ✓ GitHub authenticated"
else
    echo "  ✗ GitHub not authenticated"
    exit 1
fi

# Test 3: Check repo count
echo "3. Checking repositories:"
REPO_COUNT=$(gh repo list --limit 1000 | tail -n +4 | wc -l)
echo "  Found $REPO_COUNT repositories"

if [ "$REPO_COUNT" -eq 0 ]; then
    echo "  ✗ No repositories found"
    exit 1
fi

# Test 4: Show first few repos
echo "4. First 3 repositories:"
gh repo list --limit 1000 | tail -n +4 | head -3

# Test 5: Test fzf with simple data
echo "5. Testing fzf functionality:"
TEST_OUTPUT=$(echo -e "test1\ntest2\ntest3" | fzf --height=5 --layout=reverse --prompt="Test: " --print-query --expect=ctrl-c 2>/dev/null || echo "FAILED")
if [ "$TEST_OUTPUT" = "FAILED" ]; then
    echo "  ✗ fzf test failed - this might be the issue"
    echo "  This could be due to terminal compatibility or stdin/stdout issues"
else
    echo "  ✓ fzf working"
fi

# Test 6: Test with actual repo data but simpler fzf options  
echo "6. Testing with actual repo data:"
echo "   Running: gh repo list --limit 10 | tail -n +4 | fzf --height=10"
echo "   If you see the fzf interface, press Esc to continue the debug..."

SELECTED=$(gh repo list --limit 10 | tail -n +4 | fzf --height=10 --layout=reverse --prompt="Debug test: " || echo "NO_SELECTION")

if [ "$SELECTED" = "NO_SELECTION" ]; then
    echo "  ✗ No selection made or fzf failed"
else
    echo "  ✓ Selection worked: $SELECTED"
fi

echo "=== Debug complete ==="
