#!/usr/bin/env bash

# gh-select - Simple GitHub repository selector
set -euo pipefail

# Colors
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly BLUE='\033[0;34m'
readonly CYAN='\033[0;36m'
readonly NC='\033[0m'

# Check dependencies
check_deps() {
    local missing=()
    command -v gh >/dev/null || missing+=("gh")
    command -v fzf >/dev/null || missing+=("fzf") 
    command -v jq >/dev/null || missing+=("jq")
    
    if [[ ${#missing[@]} -gt 0 ]]; then
        echo -e "${RED}Missing: ${missing[*]}${NC}" >&2
        exit 1
    fi
}

# Check GitHub auth
check_auth() {
    if ! gh auth status >/dev/null 2>&1; then
        echo -e "${RED}Not authenticated. Run: gh auth login${NC}" >&2
        exit 1
    fi
}

# Main function
main() {
    check_deps
    check_auth
    
    echo -e "${BLUE}🔍 Fetching repositories...${NC}" >&2
    
    # Fetch and format repos in one pipeline
    gh repo list --limit 1000 --json nameWithOwner,description,isPrivate,updatedAt | \
    jq -r '.[] | 
        "\(.nameWithOwner) | \(.description // "No description") | \(if .isPrivate then "🔒" else "🌍" end) | \(.updatedAt[:10])"' | \
    fzf \
        --height=90% \
        --layout=reverse \
        --border=rounded \
        --prompt="🔍 Select repository > " \
        --header="Navigate: ↑/↓ | Filter: type | Select: Enter | Quit: Esc" \
        --preview='echo {} | cut -d"|" -f1 | xargs gh repo view --json description,url,language,stargazerCount,forkCount | jq -r "\"Description: \" + (.description // \"None\") + \"\nURL: \" + .url + \"\nLanguage: \" + (.language // \"Unknown\") + \"\nStars: \" + (.stargazerCount | tostring) + \"\nForks: \" + (.forkCount | tostring)"' \
        --preview-window="right:50%:wrap" \
        --bind="ctrl-c:abort,esc:abort" | \
    cut -d'|' -f1 | \
    xargs -I {} sh -c 'echo -e "Selected: ${GREEN}{}${NC}" && echo "Actions:" && echo "1) Clone: gh repo clone {}" && echo "2) View: gh repo view {} --web" && echo "3) Copy URL: echo https://github.com/{}"'
}

main "$@"
