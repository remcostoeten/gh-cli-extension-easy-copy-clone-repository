#!/usr/bin/env bash

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# Header
echo -e "${CYAN}"
echo "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ"
echo "‚îÇ          GitHub Repository Selector        ‚îÇ"
echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
echo "‚îÇ  Interactive repository selection tool  ‚îÇ"
echo "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ"
echo -e "${NC}"

# Check dependencies
for cmd in gh fzf jq; do
    if ! command -v "$cmd" >/dev/null 2>&1; then
        echo -e "${RED}Error: $cmd is required${NC}"
        exit 1
    fi
done

# Check auth
if ! gh auth status >/dev/null 2>&1; then
    echo -e "${RED}Please run: gh auth login${NC}"
    exit 1
fi

echo -e "${BLUE}üîç Fetching your repositories...${NC}"

# Create temp file for repositories
temp_file=$(mktemp)
trap "rm -f '$temp_file'" EXIT

# Fetch repositories
if ! gh repo list --json nameWithOwner,description,isPrivate --limit 1000 > "$temp_file" 2>/dev/null; then
    echo -e "${RED}‚ùå Failed to fetch repositories${NC}"
    exit 1
fi

# Count repos
repo_count=$(jq length "$temp_file")
echo -e "${GREEN}‚úÖ Found $repo_count repositories${NC}"

if [ "$repo_count" -eq 0 ]; then
    echo -e "${RED}No repositories found${NC}"
    exit 1
fi

echo

# Create formatted list for fzf
formatted_repos=$(mktemp)
trap "rm -f '$temp_file' '$formatted_repos'" EXIT

jq -r '.[] | (if .isPrivate then "üîí" else "üåç" end) as $privacy | (if .description and .description != "" and .description != null then .description else "No description" end) as $desc | "\(.nameWithOwner) | \($privacy) | \($desc)"' "$temp_file" > "$formatted_repos"

# fzf selection
selected_line=$(cat "$formatted_repos" | fzf \
    --height=80% \
    --layout=reverse \
    --border=rounded \
    --prompt="üîç Select repository > " \
    --header="Navigate: ‚Üë/‚Üì | Filter: type | Select: Enter | Quit: Esc" \
    --delimiter=" | " \
    --with-nth=1,2,3 \
    --preview='echo {} | cut -d"|" -f1 | xargs gh repo view 2>/dev/null || echo "Loading..."' \
    --preview-window=right:60%:wrap) || {
    echo -e "${BLUE}No repository selected${NC}"
    exit 0
}

# Extract repo name
selected_repo=$(echo "$selected_line" | cut -d'|' -f1 | xargs)

if [ -n "$selected_repo" ]; then
    echo
    echo -e "${GREEN}‚úÖ Selected: ${selected_repo}${NC}"
    echo
    echo "What would you like to do?"
    echo "1) Clone repository"
    echo "2) Copy repository name"  
    echo "3) Copy repository URL"
    echo "4) Open in browser"
    echo "5) Just show name and exit"
    
    # Read single character to avoid arrow key issues
    echo -n "Choice (1-5): "
    read -n 1 choice
    echo
    
    case $choice in
        1)
            echo -e "${BLUE}üì• Cloning ${selected_repo}...${NC}"
            gh repo clone "$selected_repo"
            ;;
        2)
            if command -v wl-copy >/dev/null 2>&1; then
                echo "$selected_repo" | wl-copy
                echo -e "${GREEN}üìã Copied repository name to clipboard${NC}"
            elif command -v xclip >/dev/null 2>&1; then
                echo "$selected_repo" | xclip -selection clipboard
                echo -e "${GREEN}üìã Copied repository name to clipboard${NC}"
            else
                echo -e "${GREEN}Repository name: $selected_repo${NC}"
            fi
            ;;
        3)
            repo_url="https://github.com/$selected_repo"
            if command -v wl-copy >/dev/null 2>&1; then
                echo "$repo_url" | wl-copy
                echo -e "${GREEN}üìã Copied repository URL to clipboard${NC}"
            elif command -v xclip >/dev/null 2>&1; then
                echo "$repo_url" | xclip -selection clipboard
                echo -e "${GREEN}üìã Copied repository URL to clipboard${NC}"
            else
                echo -e "${GREEN}Repository URL: $repo_url${NC}"
            fi
            ;;
        4)
            echo -e "${BLUE}üåê Opening in browser...${NC}"
            gh repo view "$selected_repo" --web
            ;;
        5|*)
            echo "$selected_repo"
            ;;
    esac
else
    echo -e "${BLUE}No repository selected${NC}"
fi
