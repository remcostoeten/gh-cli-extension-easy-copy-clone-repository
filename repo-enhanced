#!/usr/bin/env bash

# Enhanced repo selector with better formatting
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${BLUE}🔍 Fetching repositories with full details...${NC}" >&2

# Get repos and enhance the display
gh repo list --limit 1000 | \
tail -n +4 | \
awk '
BEGIN { 
    # ANSI color codes
    cyan = "\033[0;36m"
    green = "\033[0;32m" 
    yellow = "\033[1;33m"
    red = "\033[0;31m"
    blue = "\033[0;34m"
    nc = "\033[0m"
    bold = "\033[1m"
}
{
    # Parse the line
    name = $1
    info = ""
    updated = ""
    description = ""
    
    # Find where INFO column starts (look for "private" or "public")
    for (i = 2; i <= NF; i++) {
        if ($i == "private" || $i == "public") {
            info = $i
            # Everything after this field until we find time indicators is description
            desc_start = 2
            desc_end = i - 1
            
            # Get description
            if (desc_end >= desc_start) {
                for (j = desc_start; j <= desc_end; j++) {
                    description = description $j " "
                }
            }
            
            # Get updated time (everything after info field)
            for (j = i + 1; j <= NF; j++) {
                updated = updated $j " "
            }
            break
        }
    }
    
    # Clean up strings
    gsub(/^ +| +$/, "", description)
    gsub(/^ +| +$/, "", updated)
    
    # Set default if no description
    if (description == "") description = "No description"
    
    # Format the output with colors and icons
    privacy_icon = (info == "private") ? "🔒" : "🌍"
    privacy_color = (info == "private") ? red : green
    
    printf "%s %s%s%s %s%s%s | %s%s%s | %s%s%s\n", 
        privacy_icon,
        bold, name, nc,
        privacy_color, info, nc,
        yellow, (description == "No description") ? description : substr(description, 1, 60) "...", nc,
        cyan, updated, nc
}' | \
fzf --ansi \
    --height=90% \
    --layout=reverse \
    --prompt="🔍 Select repository: " \
    --header="Navigate: ↑/↓ or j/k | Filter: type | Select: Enter | Preview: Tab | Quit: Esc" \
    --preview='echo {} | sed "s/[🔒🌍] \([^ ]*\).*/\1/" | xargs gh repo view' \
    --preview-window=right:50%:wrap \
    --bind="ctrl-c:abort,esc:abort,tab:toggle-preview" | \
sed 's/[🔒🌍] \([^ ]*\).*/\1/'
