#!/usr/bin/env bash

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# Header
echo -e "${CYAN}"
echo "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ"
echo "‚îÇ          GitHub Repository Selector        ‚îÇ"
echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
echo "‚îÇ  Interactive repository selection tool  ‚îÇ"
echo "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ"
echo -e "${NC}"

# Check if tools exist
for cmd in gh fzf; do
    if ! command -v "$cmd" >/dev/null 2>&1; then
        echo -e "${RED}Error: $cmd is required${NC}"
        exit 1
    fi
done

# Check auth
if ! gh auth status >/dev/null 2>&1; then
    echo -e "${RED}Please run: gh auth login${NC}"
    exit 1
fi

echo -e "${BLUE}üîç Fetching repositories...${NC}"

# Get repos with a more robust approach - using JSON output and processing
SELECTED=$(gh repo list --json name,owner --limit 1000 | \
    jq -r '.[] | "\(.owner.login)/\(.name)"' | \
    fzf --height=90% \
        --layout=reverse \
        --prompt="Select repo: " \
        --header="Navigate: ‚Üë/‚Üì | Filter: type | Select: Enter | Quit: Esc" \
        --preview='gh repo view {}' \
        --preview-window=right:60%:wrap)

if [ -n "$SELECTED" ]; then
    echo
    echo -e "${GREEN}‚úÖ Selected: ${SELECTED}${NC}"
    echo
    echo "What would you like to do?"
    echo "1) Clone repository"
    echo "2) Copy repository name"  
    echo "3) Copy repository URL"
    echo "4) Open in browser"
    echo "5) Just show name and exit"
    
    read -p "Choice (1-5): " choice
    
    case $choice in
        1)
            echo -e "${BLUE}üì• Cloning ${SELECTED}...${NC}"
            gh repo clone "$SELECTED"
            ;;
        2)
            echo "$SELECTED" | wl-copy 2>/dev/null || echo "$SELECTED" | xclip -selection clipboard 2>/dev/null || echo "$SELECTED"
            echo -e "${GREEN}üìã Copied repository name${NC}"
            ;;
        3)
            echo "https://github.com/$SELECTED" | wl-copy 2>/dev/null || echo "https://github.com/$SELECTED" | xclip -selection clipboard 2>/dev/null || echo "https://github.com/$SELECTED"
            echo -e "${GREEN}üìã Copied repository URL${NC}"
            ;;
        4)
            echo -e "${BLUE}üåê Opening in browser...${NC}"
            gh repo view "$SELECTED" --web
            ;;
        5|*)
            echo "$SELECTED"
            ;;
    esac
else
    echo -e "${BLUE}No repository selected${NC}"
fi
